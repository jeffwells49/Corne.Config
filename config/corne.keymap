/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HR_Mod: HR_Mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HR_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <175>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB   &kp Q               &kp W                &kp E                   &kp R                 &kp T                     &HR_Mod RC(Y) Y    &kp U                  &kp I                    &kp O                &kp P     &kp ESCAPE
&kp CAPS  &HR_Mod LEFT_GUI A  &HR_Mod LG(LS(S)) S  &HR_Mod LEFT_CONTROL D  &HR_Mod LEFT_SHIFT F  &kp G                     &kp H              &HR_Mod RIGHT_SHIFT J  &HR_Mod RIGHT_CONTROL K  &HR_Mod RIGHT_ALT L  &kp SEMI  &kp APOS
&mo 2     &HR_Mod LC(Z) Z     &HR_Mod LC(X) X      &HR_Mod LC(C) C         &HR_Mod LC(V) V       &kp B                     &HR_Mod RC(N) N    &kp M                  &kp COMMA                &kp DOT              &kp FSLH  &kp LEFT_ARROW
                                                   &kp DELETE              &mo 1                 &HR_Mod HOME BACKSPACE    &HR_Mod END SPACE  &mo 1                  &kp ENTER
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB    &HR_Mod TILDE GRAVE  &trans    &kp UP_ARROW    &trans     &trans                 &kp MINUS                     &HR_Mod AMPERSAND N7   &HR_Mod STAR N8      &HR_Mod LPAR N9         &kp ASTERISK  &kp BSPC
&trans     &kp BACKSLASH        &kp LEFT  &kp DOWN        &kp RIGHT  &trans                 &kp PLUS                      &HR_Mod DLLR NUMBER_4  &HR_Mod PRCNT N5     &HR_Mod CARET NUMBER_6  &kp SLASH     &kp RA(RC(M))
&kp LSHFT  &trans               &trans    &trans          &trans     &kp ENTER              &kp EQUAL                     &HR_Mod EXCL NUMBER_1  &HR_Mod AT NUMBER_2  &HR_Mod HASH NUMBER_3   &kp PERIOD    &kp RIGHT_ARROW
                                          &kp LEFT_SHIFT  &trans     &HR_Mod HOME DELETE    &HR_Mod RIGHT_PARENTHESIS N0  &HR_Mod RPAR N0        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp F1  &kp F2         &kp F3                &kp F4      &kp F5             &kp F6             &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &bt BT_SEL 4  &bt BT_SEL 3
&kp F7  &kp F8         &kp F9                &kp F10     &kp F11            &kp F11            &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &bt BT_SEL 2  &bt BT_SEL 1
&trans  &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &bt BT_SEL 0  &bt BT_CLR
                                             &kp LGUI    &trans             &kp SPACE          &kp RET    &trans     &kp RALT
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
